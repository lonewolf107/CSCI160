import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'plusMinus' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void plusMinus(List<Integer> arr) {
        // intializing counters
    int posCount = 0;
    int negCount = 0;
    int zeroCount = 0;

    for (int num : arr) {
        // iterating over each number in the array for catagorization
        if (num > 0) {
            posCount++;
        } else if (num < 0) {
            negCount++;
        } else {
            zeroCount++;
        }
    }

    int total = arr.size();
    // calculating ratios for positives, negatives and zero
    double posRatio = (double) posCount / total;
    double negRatio = (double) negCount / total;
    double zeroRatio = (double) zeroCount / total;

    System.out.printf("%.6f%n", posRatio);
    System.out.printf("%.6f%n", negRatio);
    System.out.printf("%.6f%n", zeroRatio);
}


}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.plusMinus(arr);

        bufferedReader.close();
    }
}
